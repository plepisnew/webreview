@baseUrl = http://localhost:3000
@resource = api/users
//what shoud Id be?
@objectId = 6317bb727589b131e438fa32


#################################
############## GET ##############
#################################

### Get a list of all users: 200
GET {{baseUrl}}/{{resource}} HTTP/1.1

### Get a user by its id: 200
GET {{baseUrl}}/{{resource}}/{{objectId}} HTTP/1.1

### Get a user by its id which doesn't exist: 400
GET {{baseUrl}}/{{resource}}/63178eff73a9885d248f9b76 HTTP/1.1

### Get a user by its id which isn't a valid ObjectId: 400
GET {{baseUrl}}/{{resource}}/1337 HTTP/1.1

### (!) Same ObjectId error handling applies to all other HTTP methods

##################################
############## POST ##############
##################################

### Create a user: 200
POST {{baseUrl}}/{{resource}} HTTP/1.1
Content-Type: application/json

{
    "username": "user",
    "password": "password",
    "description": "description",
    "profilePictureSrc": "/images/user.png"
}

### Create a user with a missing optional field: 200
POST {{baseUrl}}/{{resource}} HTTP/1.1
Content-Type: application/json

{
    "username": "kidNamedFinger",
    "password": "password",
    "description": "time to cook a de methe"
}

### Create a user with a missing required field: 400
POST {{baseUrl}}/{{resource}} HTTP/1.1
Content-Type: application/json

{
    "password": "123"
}

###################################
############# DELETE ##############
###################################

### Delete all users: 200
DELETE {{baseUrl}}/{{resource}} HTTP/1.1

### Delete a user by id: 200
DELETE {{baseUrl}}/{{resource}}/{{objectId}} HTTP/1.1

###############################
############ PUT ##############
###############################

### Replace a user by id: 200
PUT {{baseUrl}}/{{resource}}/{{objectId}} HTTP/1.1
Content-Type: application/json

{
    "username": "newUser",
    "password": "newPassword",
    "description": "newDescription",
    "profilePictureSrc": "newImage.png"
}

### Replace a user by id with missing optional fields: 200 (fields become defaults)
PUT {{baseUrl}}/{{resource}}/{{objectId}} HTTP/1.1
Content-Type: application/json

{
    "username": "newUser",
    "password": "newPassword"
}

### Replace a user by id with missing required fields: 400
PUT {{baseUrl}}/{{resource}}/{{objectId}} HTTP/1.1
Content-Type: application/json

{
    "username": "newUser"
}

##################################
############# PATCH ##############
##################################

### Update a user by id: 200
PATCH {{baseUrl}}/{{resource}}/{{objectId}} HTTP/1.1
Content-Type: application/json

{
    "username": "updatedUser",
    "description": "updatedDescription"
}

### Update a user by id with excessive fields: 200
PATCH {{baseUrl}}/{{resource}}/{{objectId}} HTTP/1.1
Content-Type: application/json

//I'm gonna write that joke on your grave stone 
{
    "profilePictureSrc": "images/src.png",
    "kinda": "based_ngl"
}

//I feel there should be more in this file but can't think of anything right now